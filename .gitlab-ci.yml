image: golang:1.10-alpine

stages:
- init
- test
- build

init:
  stage: init
  script:
  - export GOPATH=$(pwd)
  - apk update && apk add git
  - go get github.com/ghodss/yaml github.com/cbroglie/mustache/... github.com/stretchr/testify
  artifacts:
    paths:
    - bin/
    - pkg/
    - src/


test:
  stage: test
  dependencies:
  - init
  coverage: '/coverage: \d+\.\d+\%/'
  script:
  - export GOPATH=$(pwd)
  - go test -cover


build:
  stage: build
  dependencies:
  - init
  script:
  - export GOPATH=$(pwd)
  - go build .
  artifacts:
    paths:
      - depcharge


build-docker:
  image: docker:latest
  stage: build
  services:
  - docker:dind
  script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  - docker build -t $CI_REGISTRY_IMAGE:latest .

  # Ensure the container can run properly
  - docker run $CI_REGISTRY_IMAGE:latest

  - docker push $CI_REGISTRY_IMAGE:latest
  only:
  - master
